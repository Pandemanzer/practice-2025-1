import os
os.environ["VOSK_LOG_LEVEL"] = "-1"

from tray_tkinter import TrayIconTk
import threading
from utils import listen, speak
from skills import system, browser, applications

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏
ASSISTANT_NAME = "–≤–µ—Å—Ç–∞"
assistant_names = ["–≤–µ—Å—Ç–∞", "vesta", "–º–µ—Å—Ç–æ", "–≤–µ—Å—Ç", "–≤–µ—Å"]
handlers = [system.handle, browser.handle, applications.handle]

# === –§—Ä–∞–∑—ã –ø–æ–º–æ—â–∏
help_phrases = [
    "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å", "—á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å", "–ø–æ–º–æ—â—å",
    "–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏", "—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥", "–∫–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏"
]

def explain_features():
    speak("–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:")
    speak("–ó–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –≥–æ–ª–æ—Å—É.")
    speak("–û—Ç–∫—Ä—ã–≤–∞—Ç—å —Å–∞–π—Ç—ã –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ.")
    speak("–£–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º: –≤—ã–∫–ª—é—á–∞—Ç—å, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å, –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å.")
    speak("–†–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –æ–Ω–ª–∞–π–Ω, —Ç–∞–∫ –∏ –æ—Ñ–ª–∞–π–Ω.")
    speak("–ó–∞–ø–æ–º–∏–Ω–∞—Ç—å –∏ –∑–∞–±—ã–≤–∞—Ç—å —è—Ä–ª—ã–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞.")
    speak("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –∏ –¥–∞–≤–∞—Ç—å –≤—ã–±–æ—Ä.")
    speak("–ß—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω—è, —Å–∫–∞–∂–∏—Ç–µ –í–µ—Å—Ç–∞. –ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å ‚Äî —Å–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–ø.")

# === –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å, –∑–∞–ø—É—Å–∫–∞–µ–º—ã–π –∏–∑ GUI
def assistant_logic(tray):
    active = False
    tray.set_idle()
    speak("–ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –∑–∞–ø—É—â–µ–Ω. –°–∫–∞–∂–∏—Ç–µ '–í–µ—Å—Ç–∞', —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å.")

    while True:
        query = listen().strip()
        if not query:
            continue

        if any(name in query for name in assistant_names):
            if "–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã" in query:
                speak("–í—ã–∫–ª—é—á–∞—é—Å—å. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è.")
                tray.root.quit()
                break

            elif "—Å—Ç–æ–ø" in query and active:
                speak("–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è.")
                active = False
                tray.set_idle()
                continue

            elif not active:
                speak("–Ø –≤–∞—Å —Å–ª—É—à–∞—é.")
                active = True
                tray.set_active()
                continue

        # üéô –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –ø–æ–º–æ—â—å
        if active and any(phrase in query for phrase in help_phrases):
            explain_features()
            continue

        if active:
            for handler in handlers:
                if handler(query):
                    break

# === –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    tray = TrayIconTk()
    logic_thread = threading.Thread(target=assistant_logic, args=(tray,), daemon=True)
    logic_thread.start()
    tray.run()
